{"mappings":"AAGA,MAMMA,EAAO,CACXC,KAAMC,SAASC,cAAc,mBAC7BC,UAAWF,SAASC,cAAc,0BAClCE,OAAQH,SAASC,cAAc,cAG3BG,EAAa,ICZJ,MAObC,mBACE,OAAOC,MACL,qEAAgCC,KAAKC,6CAA6CD,KAAKE,iBAAiBF,KAAKG,WAE5GC,MAAKC,IACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMP,KAAKQ,YAIvB,OAFAR,KAAKE,MAAQ,EAENG,EAAKI,MAAM,IAEnBC,OAAMC,GAAOC,MAAM,WAACD,M,CAGrBE,cACF,OAAOb,KAAKC,a,CAGVY,YAAQC,GACV,OAAQd,KAAKC,cAAgBa,C,CAE3BC,cACF,OAAOf,KAAKE,I,CAGVa,YAAQC,GACV,OAAQhB,KAAKE,KAAOc,C,CAGtBC,YACEjB,KAAKE,KAAO,C,CArCdgB,cACElB,KAAKC,cAAgB,GACrBD,KAAKE,KAAO,EACZF,KAAKG,QAAU,E,GDSnBgB,QAAQC,IAAIvB,GACZ,MAAMwB,EAAW,IAAIC,qBAAqBC,EAd1B,CACdC,KAAM,KACNC,WAAY,QACZC,UAAW,IAyBb,SAASH,IACP1B,EAAWC,mBAAmBM,MAAK,EAACuB,UAAEA,EAASC,KAAEA,MAC/C,MAAMC,EAAchC,EAAWkB,QAAUlB,EAAWM,QAIpD,GAHAgB,QAAQC,IAAIO,GACZR,QAAQC,IAAIS,GAERA,IAAgBF,EAMlB,OALAN,EAASS,UAAUvC,EAAKK,aACxBL,EAAKI,UAAUoC,mBACb,YACA,+BAQR,SAAsBC,GACpB,MAAMC,EAASD,EAAIE,QAAO,CAACC,GAAKC,aAAEA,KAE9BD,EACA,2BACcC,qCAGf,IAEH7C,EAAKI,UAAUoC,mBAAmB,YAAaE,E,CAd7CI,CAAaT,EAAK,G,CA1BtBrC,EAAKC,KAAK8C,iBAAiB,UAG3B,SAA0BC,GACxBA,EAAEC,iBAEF3C,EAAWoB,YAsCX1B,EAAKI,UAAU8C,UAAY,GApC3B5C,EAAWgB,QAAU0B,EAAEG,cAAcC,MAAMC,MAC3CrB,G,IARFF,EAASwB,QAAQtD,EAAKK","sources":["src/gallery.js","src/js-components/picture-api.js"],"sourcesContent":["import './css/common.css';\nimport PituresApi from './js-components/picture-api';\n\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\n\nconst refs = {\n  form: document.querySelector('.js-search-form'),\n  container: document.querySelector('.js-articles-container'),\n  target: document.querySelector('.js-guard'),\n};\n\nconst pituresApi = new PituresApi();\nconsole.log(pituresApi);\nconst observer = new IntersectionObserver(fetch, options);\n\nrefs.form.addEventListener('submit', onSearchPictures);\nobserver.observe(refs.target);\n\nfunction onSearchPictures(e) {\n  e.preventDefault();\n\n  pituresApi.resetPage();\n  clearMarkup();\n  pituresApi.picture = e.currentTarget.query.value;\n  fetch();\n}\n\nfunction fetch() {\n  pituresApi.fethcPicturesApi().then(({ totalHits, hits }) => {\n    const maxElements = pituresApi.pageNum * pituresApi.perPage;\n    console.log(totalHits);\n    console.log(maxElements);\n\n    if (maxElements === totalHits) {\n      observer.unobserve(refs.target);\n      refs.container.insertAdjacentHTML(\n        'beforeend',\n        '<p>Всё, закончились!!!</p>'\n      );\n      return;\n    }\n    createMarkup(hits);\n  });\n}\n\nfunction createMarkup(arr) {\n  const markup = arr.reduce((acc, { webformatURL }) => {\n    return (\n      acc +\n      `<li>\n        <img src=\"${webformatURL}\" alt=\"\" width=\"480\">\n    </li>`\n    );\n  }, '');\n\n  refs.container.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearMarkup() {\n  refs.container.innerHTML = '';\n}\n","const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '32549780-8d52bdcb46ac07f381f032420';\n\nexport default class PituresApi {\n  constructor() {\n    this.searchPicture = '';\n    this.page = 1;\n    this.perPage = 10;\n  }\n\n  fethcPicturesApi() {\n    return fetch(\n      `${BASE_URL}?key=${API_KEY}&q=${this.searchPicture}&orientation=horizontal&page=${this.page}&per_page=${this.perPage}`\n    )\n      .then(resp => {\n        if (!resp.ok) {\n          throw new Error(this.statusText);\n        }\n        this.page += 1;\n\n        return resp.json();\n      })\n      .catch(err => alert(`Ошибка: ${err}`));\n  }\n\n  get picture() {\n    return this.searchPicture;\n  }\n\n  set picture(newSearchPicture) {\n    return (this.searchPicture = newSearchPicture);\n  }\n  get pageNum() {\n    return this.page;\n  }\n\n  set pageNum(newPageNum) {\n    return (this.page = newPageNum);\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n"],"names":["$f78c3ee505895543$var$refs","form","document","querySelector","container","target","$f78c3ee505895543$var$pituresApi","fethcPicturesApi","fetch","this","searchPicture","page","perPage","then","resp","ok","Error","statusText","json","catch","err","alert","picture","newSearchPicture","pageNum","newPageNum","resetPage","constructor","console","log","$f78c3ee505895543$var$observer","IntersectionObserver","$f78c3ee505895543$var$fetch","root","rootMargin","threshold","totalHits","hits","maxElements","unobserve","insertAdjacentHTML","arr","markup","reduce","acc","webformatURL","$f78c3ee505895543$var$createMarkup","addEventListener","e","preventDefault","innerHTML","currentTarget","query","value","observe"],"version":3,"file":"gallery.bbcd13e7.js.map"}